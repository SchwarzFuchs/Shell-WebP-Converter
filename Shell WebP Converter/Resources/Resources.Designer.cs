//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Shell_WebP_Converter.Resources {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Shell_WebP_Converter.Resources.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cancel.
        /// </summary>
        public static string Cancel {
            get {
                return ResourceManager.GetString("Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Clear context menu.
        /// </summary>
        public static string ClearContextMenu {
            get {
                return ResourceManager.GetString("ClearContextMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Path to the input file.
        /// </summary>
        public static string CLI_InputTooltip {
            get {
                return ResourceManager.GetString("CLI_InputTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Compression level:.
        /// </summary>
        public static string CompressionLevel {
            get {
                return ResourceManager.GetString("CompressionLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Compress to.
        /// </summary>
        public static string CompressTo {
            get {
                return ResourceManager.GetString("CompressTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Compress to a specific file size.
        /// </summary>
        public static string CompressToThreshold {
            get {
                return ResourceManager.GetString("CompressToThreshold", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на One or more conversion failed. See logs for details.
        /// </summary>
        public static string ConversionFail {
            get {
                return ResourceManager.GetString("ConversionFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Custom conversion settings.
        /// </summary>
        public static string CustomConversionSettings {
            get {
                return ResourceManager.GetString("CustomConversionSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Customizable quality.
        /// </summary>
        public static string CustomizableQuality {
            get {
                return ResourceManager.GetString("CustomizableQuality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Custom settings .
        /// </summary>
        public static string CustomSettings {
            get {
                return ResourceManager.GetString("CustomSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Delete original file.
        /// </summary>
        public static string DeleteOriginalFile {
            get {
                return ResourceManager.GetString("DeleteOriginalFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Extension list cannot be empty.
        /// </summary>
        public static string EmptyExtensionsList {
            get {
                return ResourceManager.GetString("EmptyExtensionsList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Preset list cannot be empty.
        /// </summary>
        public static string EmptyPresetsList {
            get {
                return ResourceManager.GetString("EmptyPresetsList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на File extensions:.
        /// </summary>
        public static string FileExtensions {
            get {
                return ResourceManager.GetString("FileExtensions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid value.
        /// </summary>
        public static string InvalidValue {
            get {
                return ResourceManager.GetString("InvalidValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на KiB.
        /// </summary>
        public static string KiB {
            get {
                return ResourceManager.GetString("KiB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на List.
        /// </summary>
        public static string List {
            get {
                return ResourceManager.GetString("List", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на lossless.
        /// </summary>
        public static string Lossless {
            get {
                return ResourceManager.GetString("Lossless", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Lower resolution if necessary.
        /// </summary>
        public static string LowerTheResolutionWhenNecessary {
            get {
                return ResourceManager.GetString("LowerTheResolutionWhenNecessary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Shell WebP Converter.
        /// </summary>
        public static string MainWindowTitle {
            get {
                return ResourceManager.GetString("MainWindowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Context menu has been cleared.
        /// </summary>
        public static string MenuClearSuccess {
            get {
                return ResourceManager.GetString("MenuClearSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Context menu has been successfully updated.
        /// </summary>
        public static string MenuUpdateSuccess {
            get {
                return ResourceManager.GetString("MenuUpdateSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на MiB.
        /// </summary>
        public static string MiB {
            get {
                return ResourceManager.GetString("MiB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на OK.
        /// </summary>
        public static string OK {
            get {
                return ResourceManager.GetString("OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Presets:.
        /// </summary>
        public static string Presets {
            get {
                return ResourceManager.GetString("Presets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Represents which conversion presets will be shown in the context menu. 100 — lossless, -1 — customizable quality, 85 — 85% quality, etc..
        /// </summary>
        public static string PresetsTooltip {
            get {
                return ResourceManager.GetString("PresetsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Quality:.
        /// </summary>
        public static string Quality {
            get {
                return ResourceManager.GetString("Quality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Settings.
        /// </summary>
        public static string Settings {
            get {
                return ResourceManager.GetString("Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unsupported extension .
        /// </summary>
        public static string UnsupportedExtension {
            get {
                return ResourceManager.GetString("UnsupportedExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Update context menu.
        /// </summary>
        public static string UpdateContextMenu {
            get {
                return ResourceManager.GetString("UpdateContextMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Wrong arguments. Use --help for help.
        /// </summary>
        public static string WrongArgumentsHelp {
            get {
                return ResourceManager.GetString("WrongArgumentsHelp", resourceCulture);
            }
        }
    }
}
